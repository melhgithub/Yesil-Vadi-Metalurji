@using Entity.Concrete
@using Yesil_Vadi_Metalurji.Dto
@using System.ComponentModel
@using Newtonsoft.Json
@model CategoriesViewModel
@{
    ViewData["Title"] = "Kategoriler";
    Layout = "~/Views/Shared/_AdminTest.cshtml";
}

<h1>Kategori Listesi</h1>

@await Html.PartialAsync("_ScriptImports")

@using (Html.BeginForm("Filter", "CategoryTest", FormMethod.Post, new { id = "filterForm" }))
{

    var statusList = new List<SelectListItem>
{
        new SelectListItem { Value = "0", Text = "TÜMÜ" },
        new SelectListItem { Value = "1", Text = "AKTİF" },
        new SelectListItem { Value = "2", Text = "KALDIRILDI" },
    };

    var activeList = new List<SelectListItem>
{
        new SelectListItem { Value = "0", Text = "TÜMÜ" },
        new SelectListItem { Value = "1", Text = "AKTİF" },
        new SelectListItem { Value = "2", Text = "AKTİF DEĞİL" },
    };

<div class="card">
    <div class="card-header">
        <h3 class="card-title">
            <i class="fas fa-filter"></i>
            Filtrele
        </h3>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-3">
                <dt>@Html.LabelFor(m => m.FilterDto.Status, "Durum:")</dt>
                @Html.DropDownListFor(m => m.FilterDto.Status, statusList, new { @class = "form-control" })
            </div>
            <div class="col-sm-3">
                <dt>@Html.LabelFor(m => m.FilterDto.Active, "Aktiflik:")</dt>
                @Html.DropDownListFor(m => m.FilterDto.Active, activeList, new { @class = "form-control" })
            </div>
            <div class="col-sm-3">
                <dt>@Html.LabelFor(m => m.FilterDto.Name, "Kategori Adı:")</dt>
                @Html.TextBoxFor(m => m.FilterDto.Name, new { @class = "form-control", placeholder = "Kategori Adı" })
            </div>
        </div>
    </div>
</div>
}


<div class="card">
    <div class="card-header">
        <h3 class="card-title">
            <i class="fas fa-cubes"></i>
            Kategoriler
        </h3>
    </div>

    <div class="card-body">

        <button class="btn btn-primary" onclick="openYeniKategoriModal()">Yeni Kategori</button>
        <br />

        <div id="categoryTable" class="table-responsive">
            <table id="categoryGrid" class="table table-bordered table-striped"></table>
            <div id="categoryGridPager"></div>
        </div>

    </div>

</div>


<script>
    var firstModal = null;

    $(document).ready(function () {
        filterCategories();

        $('#filterForm select, #filterForm input[type="text"]').on('change', function () {
            filterCategories();
        });
    });

    function filterCategories() {
        var formData = $('#filterForm').serialize();
        console.log(formData);

        var categoryGrid = $('#categoryGrid');

        $.ajax({
            url: '@Url.Action("Filter", "CategoryTest")',
            type: 'POST',
            data: formData,
            dataType: 'json',
            success: function (response) {
                var data = response;
                console.log(data);
                showDatas(data);
            },
            error: function (error) {
                console.log("Listeleme esnasında hata oluştu: ", error);
            }
        });
    }

    function showDatas(data) {
        var categoryGrid = $('#categoryGrid');

        if (categoryGrid.length) {
            categoryGrid.jqGrid('GridUnload');

            categoryGrid.jqGrid({
                data: data,
                colModel: [
                    { name: 'id', label: 'ID', width: 40 },
                    { name: 'name', label: 'Kategori Adı', width: 250 },
                    {
                        name: 'status',
                        label: 'Durum',
                        width: 130,
                        formatter: function (cellValue) {
                            var statusText = '';
                            var statusStyle = '';

                            switch (cellValue) {
                                case 1:
                                    statusText = 'AKTİF';
                                    statusStyle = 'color: green;';
                                    break;
                                case 2:
                                    statusText = 'KALDIRILDI';
                                    statusStyle = 'color: red;';
                                    break;
                                default:
                                    break;
                            }

                            return '<span style="' + statusStyle + '">' + statusText + '</span>';
                        }
                    },
                    {
                        name: 'active',
                        label: 'Aktiflik',
                        width: 80,
                        formatter: function (cellValue) {
                            var activeText = '';
                            var activeStyle = '';

                            switch (cellValue) {
                                case true:
                                    activeText = 'AKTİF';
                                    activeStyle = 'color: green;';
                                    break;
                                case false:
                                    activeText = 'AKTİF DEĞİL';
                                    activeStyle = 'color: red;';
                                    break;
                                default:
                                    break;
                            }

                            return '<span style="' + activeStyle + '">' + activeText + '</span>';
                        }
                    },
                    {
                        name: 'actions', label: '', width: 300,
                        formatter: function (cellValue, options, rowObject) {
                            if (rowObject.status === 1) {
                                var buttons = '<button class="btn btn-primary open-edit-modal" ' +
                                    'data-categoryid="' + rowObject.id + '" ' +
                                    'data-categoryname="' + rowObject.name + '" ' +
                                    'data-categorystatus="' + rowObject.status + '" ' +
                                    'data-categoryactive="' + rowObject.active + '">Düzenle</button>' +
                                    '<button class="btn btn-warning open-delete-modal" ' +
                                    'data-categoryid="' + rowObject.id + '">Kaldır</button>';
                            }
                            if (rowObject.status === 2) {
                                var buttons = '<button class="btn btn-primary open-edit-modal" ' +
                                    'data-categoryid="' + rowObject.id + '" ' +
                                    'data-categoryname="' + rowObject.name + '" ' +
                                    'data-categorystatus="' + rowObject.status + '" ' +
                                    'data-categoryactive="' + rowObject.active + '">Düzenle</button>' +
                                    '<button class="btn btn-success open-approve-modal" ' +
                                    'data-categoryid="' + rowObject.id + '">Onayla</button>';
                            }
                            return buttons;
                        }
                    }
                ],
                pager: '#categoryGridPager',
                rowNum: 10,
                rowList: [10, 20, 30, 40, 50],
                sortname: 'id',
                viewrecords: true,
                autoheight: true,
                autoWidth: true,
                responsive: true,

            });
        }
    }





    function openApproveKategoriModal(button) {
    var data = button.dataset;
        firstModal = $.dialog({
        title: 'Kategori Onayla',
         content: `
            <!-- ${JSON.stringify(data)} -->
            <form method="post" action="@Url.Action("ApproveCategory", "CategoryTest")">

                <div class="form-group">
                    <label>Onaylamak istiyor musunuz ?</label>
                </div>

                <div class="form-group">
                    <input type="text" id="ID" name="ID" class="form-control" value="${data.categoryid}" required/>
                </div>

                <div class="form-group">
                    <input type="submit" value="Onayla" class="btn btn-primary w-100" />
                </div>

            </form>
        `
    });
    }

    function openDeleteKategoriModal(button) {
    var data = button.dataset;
        firstModal = $.dialog({
        title: 'Kategori Sil',
         content: `
            <!-- ${JSON.stringify(data)} -->
            <form method="post" action="@Url.Action("RemoveCategory", "CategoryTest")">

                <div class="form-group">
                    <label>Kaldırmak istiyor musunuz ?</label>
                </div>

                <div class="form-group">
                    <input type="text" id="ID" name="ID" class="form-control" value="${data.categoryid}" required/>
                </div>

                <div class="form-group">
                    <input type="submit" value="Kaldır" class="btn btn-warning w-100" />
                </div>

            </form>
        `
    });
    }

    function openEditKategoriModal(button) {
        var data = button.dataset;
        console.log(data.categoryactive);
        firstModal = $.dialog({
        title: 'Kategori Düzenle',
         content: `
            <!-- ${JSON.stringify(data)} -->
            <form method="post" action="@Url.Action("AddEditCategory", "CategoryTest")">

                <div class="form-group">
                    <input type="text" id="ID" name="ID" class="form-control" value="${data.categoryid}" required/>
                </div>

                <div class="form-group">
                    <label for="Name">Kategori Adı:</label>
                    <input type="text" id="Name" name="Name" class="form-control" value="${data.categoryname}" required />
                </div>

                <div class="form-group">
                    <label for="Status">Durum :</label>
                    <select id="Status" name="Status" class="form-control" data="${data.categorystatus}" required>
                        <option value="1" ${data.categorystatus == "1" ? 'selected' : ''}>AKTİF</option>
                        <option value="2" ${data.categorystatus == "2" ? 'selected' : ''}>KALDIRILDI</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="Active">Aktiflik :</label>
                    <select id="Active" name="Active" class="form-control" required>
                        <option value="1" ${data.categoryactive == 'true' ? 'selected' : ''}>AKTİF</option>
                        <option value="2" ${data.categoryactive == 'false' ? 'selected' : ''}>AKTİF DEĞİL</option>
                    </select>
                </div>

                <div class="form-group">
                    <input type="submit" value="Düzenle" class="btn btn-primary w-100" />
                </div>

            </form>
        `
    });
}

    function openYeniKategoriModal() {
        firstModal = $.dialog({
            title: 'Yeni kategori oluştur',
            content: `

<form method="post" action="@Url.Action("AddEditCategory", "CategoryTest")">
    <div class="form-group">
        <label for="Name">Kategori Adı:</label>
        <input type="text" id="Name" name="Name" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="Status">Durum :</label>
        <select id="Status" name="Status" class="form-control" required>
            <option value="1">AKTİF</option>
            <option value="2">KALDIRILDI</option>
        </select>
    </div>

    <div class="form-group">
        <label for="Active">AKTİFLİK :</label>
        <select id="Active" name="Active" class="form-control" required>
            <option value=true>AKTİF</option>
            <option value=false>AKTİF DEĞİL</option>
        </select>
    </div>

    <div class="form-group">
        <input type="submit" value="Oluştur" class="btn btn-primary w-100" />
    </div>

</form>

`
        });

    }


    $(document).on('click', '.open-delete-modal', function () {
        openDeleteKategoriModal(this);
    });

    $(document).on('click', '.open-approve-modal', function () {
        openApproveKategoriModal(this);
    });

    $(document).on('click', '.open-edit-modal', function () {
        openEditKategoriModal(this);
    });

    $(document).on('click', '#yeniUrunButton', function () {
        openYeniKategoriModal();
    });


    $(document).on('submit', 'form', function (e) {
        e.preventDefault();
        var form = $(this);

        $.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            data: form.serialize(),
            success: function (response) {
                var message = response;
                mesajDialog = $.dialog({
                    title: 'İşlem Sonucu',
                    content: message,
                    closeButton: false
                });
                setTimeout(function () {
                    mesajDialog.close();
                    if (firstModal) {
                        firstModal.close();
                    }
                    filterCategories();
                }, 1500);
            },
            error: function (error) {
                alert("Başarısız");
            }
        });
    });

</script>


